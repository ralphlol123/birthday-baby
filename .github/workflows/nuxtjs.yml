# .github/workflows/deploy.yml
#
# Build a Nuxt 3 site with pnpm and publish it to GitHub Pages.

name: Deploy Nuxt site to GitHub Pages

on:
  push:
    branches: [main]          # run on every push to main
  workflow_dispatch:          # allow manual runs

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false   # let in-flight deploys finish

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1 — checkout the repo
      - uses: actions/checkout@v4

      # 2 — setup Node *and* enable pnpm caching
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm            # looks for pnpm-lock.yaml

      # 3 — enable Corepack and make sure pnpm is available
      - name: Enable pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate   # pin a specific version if you like

      # 4 — install deps from the lock-file
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 5 — tell the Pages helper we’re building Nuxt (injects correct baseURL, etc.)
      - name: Configure Pages for Nuxt
        uses: actions/configure-pages@v5
        with:
          static_site_generator: nuxt

      # 6 — generate the static site
      - name: Generate static site
        run: pnpm generate        # output → .output/public

      # 7 — upload that folder as an artifact for the deploy job
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.output/public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
